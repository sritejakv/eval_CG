package adapter;

import probe.CallGraph;
import probe.PyCallGraphToProbeConverter;
import utils.Constants;
import utils.ResourceReader;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Class to read the call graphs generated by PyCallGraph tool.
 */
public class PyCallGraph {

    private PyCallGraphToProbeConverter pyCallGraphToProbeConverter;
    private Map<String, List<File>> categoryDotFilesMap;

    public PyCallGraph(){
        this.pyCallGraphToProbeConverter = new PyCallGraphToProbeConverter();
        this.categoryDotFilesMap = new HashMap<>();
        this.initializeFileMap();
    }

    private void initializeFileMap(){
        for (String category: Constants.benchmarkCategories){
            categoryDotFilesMap.put(category, ResourceReader.getFilesInResource(Constants.PYCALLGRAPH_DYNAMIC_CG_PATH,
                    category));
        }
    }

    public Map<String, List<File>> getCategoryDotFilesMap(){
        return categoryDotFilesMap;
    }

    public ArrayList<CallGraph> getDynamicCallGraph(File dotFileName) throws FileNotFoundException {
        pyCallGraphToProbeConverter.setReplacementString(dotFileName.getName());
        return pyCallGraphToProbeConverter.getProbeCG(new FileInputStream(dotFileName));
    }
}
